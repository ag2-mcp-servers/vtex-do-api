# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T12:06:49+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class AddCommentRequest(BaseModel):
    text: str


class Assignee(BaseModel):
    email: str
    id: str
    name: str


class EditTaskRequest(BaseModel):
    status: str


class Follower(BaseModel):
    email: str
    id: str
    name: str


class Target(BaseModel):
    id: Optional[str] = None
    type: Optional[str] = None
    url: Optional[str] = None


class NewNoteRequest(BaseModel):
    description: str
    domain: str
    target: Target = Field(..., description='Target.')


class TargetModel(BaseModel):
    id: str
    type: str
    url: str


class Target1(BaseModel):
    id: Optional[str] = Field(
        None, description='Target ID.', examples=['v964735bdev-01']
    )
    type: Optional[str] = Field(None, description='Target type.', examples=['order'])
    url: Optional[str] = Field(
        None,
        description='Target URL.',
        examples=[
            'https://basedevmkp.vtexcommercebeta.com.br/admin/checkout/#/orders/v964741bdev-01'
        ],
    )


class NotesPostRequest(BaseModel):
    description: str = Field(
        ...,
        description='Note description. Maximum number of characters: 2000.',
        examples=['Order ID in the marketplace is 786-09.'],
    )
    domain: str = Field(..., description='Note domain.', examples=['oms'])
    target: Target1 = Field(..., description='Target.')


class NewTaskRequest(BaseModel):
    assignee: Assignee
    context: str
    description: str
    domain: str
    dueDate: str
    followers: List[Follower] = Field(..., description='')
    name: str
    parentTaskId: str
    priority: str
    surrogateKey: str
    target: List[TargetModel] = Field(..., description='')
